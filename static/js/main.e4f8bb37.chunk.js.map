{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["Wraper","styled","div","Input","input","Select","select","CurrencyRow","props","currencyOption","selectedCurrency","changeCurrency","changeAmount","amount","type","value","onChange","map","option","Header","header","Content","Text","span","API_URL","App","amountTo","amountFrom","useState","setCurrencyOption","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","exchangeRate","setExcahngeRate","amountState","setAmountState","setAmount","useEffect","a","fetch","responce","json","data","currencies","Object","keys","rates","firstCurrency","base","FETCH_URL","event","target","ReactDOM","render","document","querySelector"],"mappings":"i9BAEA,IAAMA,EAASC,IAAOC,IAAV,KASNC,EAAQF,IAAOG,MAAV,KAYLC,EAASJ,IAAOK,OAAV,KAuCGC,MA3Bf,SAAqBC,GAAQ,IAEzBC,EAKED,EALFC,eACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,eACAC,EAEEJ,EAFFI,aACAC,EACEL,EADFK,OAGF,OACE,eAACb,EAAD,WACE,cAACG,EAAD,CAAOW,KAAK,SAASC,MAAOF,EAAQG,SAAUJ,IAC9C,cAACP,EAAD,CAAQU,MAAOL,EAAkBM,SAAUL,EAA3C,SAEIF,EAAeQ,KAAI,SAAAC,GACjB,OACE,wBAAqBH,MAAOG,EAA5B,SACIA,GADSA,Y,qzBC/C3B,IAAMlB,EAASC,IAAOC,IAAV,KAWNiB,EAASlB,IAAOmB,OAAV,KAWNC,EAAUpB,IAAOC,IAAV,KAQPoB,EAAOrB,IAAOsB,KAAV,KAOJC,EAAU,yCAuFDC,MArFf,WAAgB,IAQVC,EAAUC,EARD,EAC+BC,mBAAS,IADxC,mBACNnB,EADM,KACUoB,EADV,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,mBAAS,GAJpC,mBAINM,EAJM,KAIQC,EAJR,OAKyBP,oBAAS,GALlC,mBAKNQ,EALM,KAKOC,EALP,OAMeT,mBAAS,GANxB,mBAMNf,EANM,KAMEyB,EANF,KA2Db,OAjDIF,GACFT,EAAad,EACba,EAAWb,EAASqB,IAEpBR,EAAWb,EACXc,EAAad,EAASqB,GAGxBK,oBAAS,sBAAC,kCAAAC,EAAA,sEACeC,MAAMjB,GADrB,cACFkB,EADE,gBAEWA,EAASC,OAFpB,OAEFC,EAFE,OAIFC,EAAaC,OAAOC,KAAKH,EAAKI,OAC9BC,EAAgBJ,EAAW,GAEjChB,EAAkB,CAACe,EAAKM,MAAP,mBAAgBL,KACjCd,EAAgBa,EAAKM,MACrBjB,EAAcgB,GACdd,EAAgBS,EAAKI,MAAMC,IAVnB,4CAWP,IAEHV,oBAAS,sBAAC,gCAAAC,EAAA,0DACJV,IAAgBE,EADZ,uBAEAmB,EAFA,UAEe3B,EAFf,iBAE+BM,EAF/B,oBAEuDE,GAFvD,SAGiBS,MAAMU,GAHvB,cAGAT,EAHA,gBAIaA,EAASC,OAJtB,OAIAC,EAJA,OAMNT,EAAgBS,EAAKI,MAAMhB,IANrB,2CAQP,CAACF,EAAcE,IAqBhB,eAAC,EAAD,WACE,cAACb,EAAD,UACE,cAACG,EAAD,wBAEF,eAACD,EAAD,WACE,cAAC,EAAD,CACEZ,eAAgBA,EAChBC,iBAAkBoB,EAClBnB,eA3BmB,SAAAyC,GACzBrB,EAAgBqB,EAAMC,OAAOtC,QA2BvBH,aApBiB,SAAAwC,GACvBd,EAAUc,EAAMC,OAAOtC,OACvBsB,GAAe,IAmBTxB,OAAQc,IAEV,cAACL,EAAD,gBACA,cAAC,EAAD,CACEb,eAAgBA,EAChBC,iBAAkBsB,EAClBrB,eA/BiB,SAAAyC,GACvBnB,EAAcmB,EAAMC,OAAOtC,QA+BrBH,aAvBe,SAAAwC,GACrBd,EAAUc,EAAMC,OAAOtC,OACvBsB,GAAe,IAsBTxB,OAAQa,W,MCpHlB4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,W","file":"static/js/main.e4f8bb37.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Wraper = styled.div`\n  width: 100%;\n  height: 65px;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Input = styled.input`\n  height: 100%;\n  width: 275px;\n  margin-right: .35rem;\n  font-size: 1.5rem;\n  color: #34495e;\n  outline: none;\n  border: 1px solid #2c3e50;\n  border-radius: 7px;\n  padding: .35rem;\n`\n\nconst Select = styled.select`\n  height: 100%;\n  width: 85px;\n  border: 1px solid #2c3e50;\n  font-size: 1.5rem;\n  color: #34495e;\n  border-radius: 7px;\n  outline: none;\n  background-color: #fff;\n  border-bottom: 1px solid #34495e;\n`\n\nfunction CurrencyRow(props) {\n  const {\n    currencyOption,\n    selectedCurrency,\n    changeCurrency,\n    changeAmount,\n    amount\n  } = props\n\n  return (\n    <Wraper>\n      <Input type='number' value={amount} onChange={changeAmount} />\n      <Select value={selectedCurrency} onChange={changeCurrency} >\n        {\n          currencyOption.map(option => {\n            return (\n              <option key={option} value={option}>\n                { option }\n              </option>\n            )\n          })\n        }\n      </Select>\n    </Wraper>\n  )\n}\n\nexport default CurrencyRow","import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport CurrencyRow from './CurrencyRow'\n\nconst Wraper = styled.div`\n  min-width: 400px;\n  min-height: 250px;\n  text-align: center;\n  border-radius: 20px;\n  background-color: #ecf0f1;\n  box-shadow: 20px 15px 5px #bdc3c7;\n  position: relative;\n  padding: 10px;\n`\n\nconst Header = styled.header`\n  width: 100%;\n  height: 4.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0%;\n  left: 0%;\n`\n\nconst Content = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst Text = styled.span`\n  color: #34495e;\n  font-size: 3rem;\n  font-weight: 700;\n  line-height: 3rem;\n`\n\nconst API_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n  const [currencyOption, setCurrencyOption] = useState([])\n  const [currencyFrom, setCurrencyFrom] = useState()\n  const [currencyTo, setCurrencyTo] = useState()\n  const [exchangeRate, setExcahngeRate] = useState(1)\n  const [amountState, setAmountState] = useState(true)\n  const [amount, setAmount] = useState(1)\n\n  let amountTo, amountFrom\n\n  if (amountState) {\n    amountFrom = amount\n    amountTo = amount * exchangeRate\n  } else {\n    amountTo = amount\n    amountFrom = amount / exchangeRate\n  }\n\n  useEffect(async () => {\n    const responce = await fetch(API_URL)\n    const data = await responce.json()\n\n    const currencies = Object.keys(data.rates)\n    const firstCurrency = currencies[0]\n\n    setCurrencyOption([data.base, ...currencies])\n    setCurrencyFrom(data.base)\n    setCurrencyTo(firstCurrency)\n    setExcahngeRate(data.rates[firstCurrency])\n  }, [])\n\n  useEffect(async () => {\n    if (currencyFrom && currencyTo) {\n      const FETCH_URL = `${API_URL}?base=${currencyFrom}&symbols=${currencyTo}`\n      const responce = await fetch(FETCH_URL)\n      const data = await responce.json()\n  \n      setExcahngeRate(data.rates[currencyTo])\n    }\n  }, [currencyFrom, currencyTo])\n\n  const handleCurrencyFrom = event => {\n    setCurrencyFrom(event.target.value)\n  }\n\n  const handleCurrencyTo = event => {\n    setCurrencyTo(event.target.value)\n  }\n\n  const handleAmountFrom = event => {\n    setAmount(event.target.value)\n    setAmountState(true)\n  }\n\n  const handleAmountTo = event => {\n    setAmount(event.target.value)\n    setAmountState(false)\n  }\n\n  return (\n    <Wraper>\n      <Header>\n        <Text>Convert</Text>\n      </Header>\n      <Content>\n        <CurrencyRow \n          currencyOption={currencyOption}\n          selectedCurrency={currencyFrom}\n          changeCurrency={handleCurrencyFrom}\n          changeAmount={handleAmountFrom}\n          amount={amountFrom}\n        />\n        <Text>=</Text>\n        <CurrencyRow\n          currencyOption={currencyOption}\n          selectedCurrency={currencyTo}\n          changeCurrency={handleCurrencyTo}\n          changeAmount={handleAmountTo}\n          amount={amountTo}\n        />\n      </Content>\n    </Wraper>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.querySelector('#app'))"],"sourceRoot":""}